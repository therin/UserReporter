#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserReporter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sessions")]
	public partial class MainDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActiveSession(ActiveSession instance);
    partial void UpdateActiveSession(ActiveSession instance);
    partial void DeleteActiveSession(ActiveSession instance);
    partial void InsertUserSession(UserSession instance);
    partial void UpdateUserSession(UserSession instance);
    partial void DeleteUserSession(UserSession instance);
    #endregion
		
		public MainDataContext() : 
				base(global::UserReporter.Properties.Settings.Default.SessionsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActiveSession> ActiveSessions
		{
			get
			{
				return this.GetTable<ActiveSession>();
			}
		}
		
		public System.Data.Linq.Table<UserSession> UserSessions
		{
			get
			{
				return this.GetTable<UserSession>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveSessions")]
	public partial class ActiveSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _sessionStart;
		
		private string _computerName;
		
		private string _companyName;
		
		private System.Nullable<System.DateTime> _expiryDate;
		
		private string _userName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsessionStartChanging(System.Nullable<System.DateTime> value);
    partial void OnsessionStartChanged();
    partial void OncomputerNameChanging(string value);
    partial void OncomputerNameChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OnexpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiryDateChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    #endregion
		
		public ActiveSession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> sessionStart
		{
			get
			{
				return this._sessionStart;
			}
			set
			{
				if ((this._sessionStart != value))
				{
					this.OnsessionStartChanging(value);
					this.SendPropertyChanging();
					this._sessionStart = value;
					this.SendPropertyChanged("sessionStart");
					this.OnsessionStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computerName", DbType="NChar(100)")]
		public string computerName
		{
			get
			{
				return this._computerName;
			}
			set
			{
				if ((this._computerName != value))
				{
					this.OncomputerNameChanging(value);
					this.SendPropertyChanging();
					this._computerName = value;
					this.SendPropertyChanged("computerName");
					this.OncomputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NChar(100)")]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expiryDate
		{
			get
			{
				return this._expiryDate;
			}
			set
			{
				if ((this._expiryDate != value))
				{
					this.OnexpiryDateChanging(value);
					this.SendPropertyChanging();
					this._expiryDate = value;
					this.SendPropertyChanged("expiryDate");
					this.OnexpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NChar(50)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSessions")]
	public partial class UserSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _userName;
		
		private string _computerName;
		
		private string _companyName;
		
		private System.Nullable<System.DateTime> _expiryDate;
		
		private string _sessionDuration;
		
		private System.Nullable<System.DateTime> _addedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OncomputerNameChanging(string value);
    partial void OncomputerNameChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OnexpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiryDateChanged();
    partial void OnsessionDurationChanging(string value);
    partial void OnsessionDurationChanged();
    partial void OnaddedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnaddedDateChanged();
    #endregion
		
		public UserSession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(150)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computerName", DbType="NVarChar(150)")]
		public string computerName
		{
			get
			{
				return this._computerName;
			}
			set
			{
				if ((this._computerName != value))
				{
					this.OncomputerNameChanging(value);
					this.SendPropertyChanging();
					this._computerName = value;
					this.SendPropertyChanged("computerName");
					this.OncomputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(150)")]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> expiryDate
		{
			get
			{
				return this._expiryDate;
			}
			set
			{
				if ((this._expiryDate != value))
				{
					this.OnexpiryDateChanging(value);
					this.SendPropertyChanging();
					this._expiryDate = value;
					this.SendPropertyChanged("expiryDate");
					this.OnexpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionDuration", DbType="NVarChar(150)")]
		public string sessionDuration
		{
			get
			{
				return this._sessionDuration;
			}
			set
			{
				if ((this._sessionDuration != value))
				{
					this.OnsessionDurationChanging(value);
					this.SendPropertyChanging();
					this._sessionDuration = value;
					this.SendPropertyChanged("sessionDuration");
					this.OnsessionDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> addedDate
		{
			get
			{
				return this._addedDate;
			}
			set
			{
				if ((this._addedDate != value))
				{
					this.OnaddedDateChanging(value);
					this.SendPropertyChanging();
					this._addedDate = value;
					this.SendPropertyChanged("addedDate");
					this.OnaddedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
